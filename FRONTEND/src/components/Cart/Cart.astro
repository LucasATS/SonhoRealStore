---
import ItemCart from "../ItemCart/ItemCart.astro";

const listCookies = Astro.cookies.get("cart")?.value || "";

const listCartItens =
	listCookies !== "" ? JSON.parse(listCookies as string) : null;
---

<cart-popup id="cart" class="container">
	<header>
		<p class="closeButton" onclick="window.cart.close()">x</p>
		<h1>Seu carrinho</h1>
		<p class="closeButton" onclick="location.reload()">ðŸ›’</p>
	</header>

	<section id="listItensCart">
		{
			listCartItens ? (
				listCartItens.map((item: any) => (
					<ItemCart
						client:idle
						id={item?.id}
						image={item?.image}
						title={item?.title}
						price={item?.price}
						amount={item?.amount}
					/>
				))
			) : (
				<p style="width: 100%; text-align: center;">
					Se sua lista de compras estiver vazia, atualize o site
					<a href="/">ou vÃ¡ para pÃ¡gina do carrinho de compras</a>.
				</p>
			)
		}
	</section>

	<footer>
		<a>Finalizar compra</a>
	</footer>
</cart-popup>
<span class="closeWindow" id="cart-closeWindow" onclick="window?.cart.close();"
></span>

<script is:inline src="/cookies.js"></script>
<script>
	declare global {
		interface Window {
			cart: any;
		}
	}
	const modal = document.getElementById("cart") as HTMLElement;
	const blackout = document.getElementById("cart-closeWindow") as HTMLElement;

	class cartPopup extends HTMLElement {
		constructor() {
			super();
		}

		update() {}

		open() {
			blackout.style.setProperty("visibility", "visible");
			modal.style.setProperty("visibility", "visible");
			blackout.style.setProperty(
				"animation",
				"openBlackout 200ms ease-in",
			);
			modal.style.setProperty("animation", "open 200ms ease-in");
			// this.update();
		}

		close() {
			blackout.style.setProperty("visibility", "hidden");
			modal.style.setProperty("visibility", "hidden");
			blackout.style.setProperty(
				"animation",
				"closeBlackout 200ms ease-out",
			);
			modal.style.setProperty("animation", "close 200ms ease-out");
		}
	}
	customElements.define("cart-popup", cartPopup);

	document.addEventListener("keydown", function (event) {
		if (event.key === "Escape") {
			window?.cart.close();
		}
	});
</script>

<style>
	@keyframes open {
		0% {
			transform: translateX(400px);
		}
		100% {
			transform: translateX(0px);
		}
	}
	@keyframes close {
		0% {
			transform: translateX(0px);
		}
		100% {
			transform: translateX(400px);
		}
	}

	@keyframes closeBlackout {
		0% {
			background-color: var(--blackout);
		}
		100% {
			background-color: transparent;
		}
	}
	@keyframes openBlackout {
		0% {
			background-color: transparent;
		}
		100% {
			background-color: var(--blackout);
		}
	}

	.closeWindow {
		visibility: hidden;

		position: fixed;
		top: 0;
		bottom: 0;
		left: 0;
		right: 0;

		z-index: 19;
		background-color: var(--blackout);

		width: 100%;
		height: 100%;
	}

	.container {
		visibility: hidden;

		position: fixed;
		height: 100%;
		width: 400px;

		top: 0;
		right: 0;
		bottom: 0;
		background-color: var(--principal);

		z-index: 20;

		display: flex;
		flex-direction: column;

		box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.12);
	}

	.closeButton {
		cursor: pointer;
	}

	header {
		width: 100%;
		display: flex;
		flex-direction: row;
		justify-content: space-around;
		margin: 12px 0 12px 0;
	}

	header h1 {
		color: var(--color-black);
		text-align: center;
		font-weight: bold;
		font-size: 20px;
		/* flex-grow: 2; */
	}

	section {
		padding: 12px;
		overflow-x: hidden;
		overflow-y: auto;
		flex-grow: 2;
		box-shadow: 0px 0px 6px rgba(0, 0, 0, 0.2);
	}

	footer {
		padding: 16px;
		width: 100%;

		display: flex;
		justify-content: center;
	}

	footer a {
		border-radius: 10px;
		padding: 12px 20px;
		background-color: var(--color-black);
		color: var(--principal);
		cursor: pointer;
		font-weight: bold;
		font-size: 14px;
	}
	footer a:hover {
		opacity: 90%;
	}
</style>
