---
interface Props {
	id: number;
	image: string;
	title: string;
	amount: number;
	price: number;
}

const {
	id = -1,
	image = "",
	title = "",
	amount = 1,
	price = 0,
}: Props = Astro.props;
---

<span-principal
	class="container"
	id={"itemCart"}
	data-price={price}
	data-id={id}
>
	<span class="col" style="width: 100%;">
		<header>
			<img src={image} alt={title} />
			<section>
				<h1 class="titulo">{title}</h1>
				<p class="amount">Quantidade</p>
				<span class="detalhe">
					<input
						type="number"
						id={"amount-input-" + id}
						min="1"
						value={amount}
					/>
					<p id={"price-itemCart-" + id}>R$ {price.toFixed(2)}</p>
				</span>
			</section>
			<button>üóëÔ∏è</button>
		</header>
	</span>
</span-principal>

<script>
	class spanPrincipal extends HTMLElement {
		constructor() {
			super();

			const price = this.dataset.price;
			const id = this.dataset.id;

			const numberInput = document.getElementById(
				"amount-input-" + id,
			) as any;
			const priceParagraph = document.getElementById(
				"price-itemCart-" + id,
			) as any;

			const count = () => {
				const newPrice = Number(price) * parseFloat(numberInput?.value);
				priceParagraph.innerHTML = `R$ ${newPrice.toFixed(2)}`;
			};

			numberInput?.addEventListener("change", count);
		}
	}

	customElements.define("span-principal", spanPrincipal);
</script>

<style>
	.container {
		display: flex;
		flex-direction: row;
		width: 100%;
		height: 100px;
		margin: 0 30px 30px 0;
		justify-content: space-between;

		border-bottom: 0.1px solid var(--color-black-click);
	}

	header {
		display: flex;
		flex-direction: row;
		justify-content: space-between;
	}
	.titulo {
		margin: 0;
		font-size: 14px;
		width: 100%;
		height: 40px;

		overflow: hidden;
		display: -webkit-box;
		-webkit-line-clamp: 2;
		line-clamp: 2;
		-webkit-box-orient: vertical;
	}

	header img {
		object-fit: contain;
		margin: 10px;
		width: 70px;
		height: 70px;
	}

	section {
		display: flex;
		flex-direction: column;
		justify-content: space-between;
		width: 100%;
	}

	.detalhe {
		display: flex;
		justify-content: space-between;
		height: 100%;
	}

	button {
		background-color: rgb(254, 244, 242);
		color: var(--principal);

		text-decoration: none;
		text-align: center;
		font-size: 14px;
		cursor: pointer;

		padding: 10px;
		border: none;

		height: 40px;
		width: 40px;

		border-radius: 6px;

		transition-duration: 0.1s;
	}

	p,
	.amount {
		margin: 2px;
		color: var(--color-black);
		font-weight: bold;
		font-size: 12px;
	}
	input {
		background-color: var(--background);
		border: none;
		outline: none;
		border-radius: 6px;
		text-align: center;
		height: 24px;
		width: 60px;
	}
</style>
